version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: horoscope_mongodb_local
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: horoscope_db
    volumes:
      - mongodb_local_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - horoscope_local_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Node.js API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: horoscope_api_local
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      NODE_ENV: development
      PORT: ${PORT:-3000}
      MONGODB_URI: mongodb://root:password123@mongodb:27017/horoscope_db?authSource=admin&retryWrites=true&w=majority
      JWT_SECRET: ${JWT_SECRET:-your_super_secret_jwt_key_change_this_in_production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-60000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-5}
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - .:/app
      - /app/node_modules
    networks:
      - horoscope_local_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-3000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_local_data:
    driver: local

networks:
  horoscope_local_network:
    driver: bridge